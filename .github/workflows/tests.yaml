---
name: dotfile tests
on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  bats_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Clone git repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive

      - name: Setup git config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Setup Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          if [[ "${RUNNER_OS}" == "Linux" ]]; then
              sudo apt-get update
              sudo apt-get install -y curl git zsh
          elif [[ "${RUNNER_OS}" == "macOS" ]]; then
              brew install curl git zsh
          fi

      - name: Install pipx and dependencies
        run: |
          export PIPX_HOME="$HOME/.local/pipx"
          export PIPX_BIN_DIR="$HOME/.local/bin"
          mkdir -p $PIPX_HOME $PIPX_BIN_DIR
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install ansible-core
          pipx inject ansible-core docker molecule molecule-docker "molecule-plugins[docker]"
          ansible-galaxy collection install git+https://github.com/cowdogmoo/workstation.git,main

      - name: Create global Ansible config
        run: |
          PYTHON_PATH=$(python3 -c 'import sys; print(sys.executable)')
          echo "[defaults]" > $HOME/ansible.cfg
          echo "interpreter_python = $PYTHON_PATH" >> $HOME/ansible.cfg
          export ANSIBLE_CONFIG=$HOME/ansible.cfg

      - name: Install the dotfiles
        run: |
          chmod +x install_dot_files.sh
          if ./install_dot_files.sh; then
            echo "Dotfiles installed successfully"
          else
            echo "Dotfiles installation failed"
            exit 1
          fi

      - name: Setup BATS
        uses: mig4/setup-bats@af9a00deb21b5d795cabfeaa8d9060410377686d # v1
        with:
          bats-version: 1.2.1

      - name: Run Bats tests
        run: |
          bats tests/test-go.bats

  dotfile_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Clone git repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive

      - name: Setup git config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Install asdf cli
        uses: asdf-vm/actions/setup@6a442392015fbbdd8b48696d41e0051b2698b2e4 # v2

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          if [[ "${RUNNER_OS}" == "Linux" ]]; then
              sudo apt-get update
              sudo apt-get install -y curl git zsh
          elif [[ "${RUNNER_OS}" == "macOS" ]]; then
              brew install curl git zsh
          fi

      - name: Install pipx and dependencies
        run: |
          export PIPX_HOME="$HOME/.local/pipx"
          export PIPX_BIN_DIR="$HOME/.local/bin"
          mkdir -p $PIPX_HOME $PIPX_BIN_DIR
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install ansible-core
          pipx inject ansible-core docker molecule molecule-docker "molecule-plugins[docker]"
          ansible-galaxy collection install git+https://github.com/cowdogmoo/workstation.git,main

      - name: Create global Ansible config
        run: |
          PYTHON_PATH=$(python3 -c 'import sys; print(sys.executable)')
          echo "[defaults]" > $HOME/ansible.cfg
          echo "interpreter_python = $PYTHON_PATH" >> $HOME/ansible.cfg
          export ANSIBLE_CONFIG=$HOME/ansible.cfg

      - name: Install the dotfiles
        run: |
          chmod +x install_dot_files.sh
          if ./install_dot_files.sh; then
            echo "Dotfiles installed successfully"
          else
            echo "Dotfiles installation failed"
            exit 1
          fi

      - name: Confirm dotfiles are installed and working
        run: |
          source ~/.zshrc
          cat ~/.zshrc
          source ~/.dotfiles/python
          ls -lart ~/.dotfiles
          which ipaddr
          which go
          which run_playbook
        shell: zsh {0}
