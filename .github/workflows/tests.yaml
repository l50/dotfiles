---
name: Dotfile tests
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  schedule:
    # Run once a week (see https://crontab.guru)
    - cron: "0 0 * * 0"
  workflow_dispatch:

# Cancel any in-progress job when a new workflow is triggered
concurrency:
  cancel-in-progress: true
  group: pre-commit-${{ github.workflow }}-${{ github.ref }}

env:
  BATS_VERSION: 1.9.0

jobs:
  bats_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Setup git config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              sudo apt-get update
              sudo apt-get install -y curl git zsh
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              brew install curl git zsh python3 ansible
          fi

      - name: Install workstation collection
        run: ansible-galaxy collection install git+https://github.com/cowdogmoo/workstation.git,main

      - name: Install the dotfiles
        run: |
          chmod +x install_dot_files.sh
          if ./install_dot_files.sh --skip-ansible; then
            echo "Dotfiles installed successfully"
          else
            echo "Dotfiles installation failed"
            exit 1
          fi

      - name: Setup BATS
        uses: mig4/setup-bats@af9a00deb21b5d795cabfeaa8d9060410377686d # v1
        with:
          bats-version: ${{ env.BATS_VERSION }}

      - name: Run Bats tests
        run: bats tests/test-go.bats

  dotfile_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Clone git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Setup git config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Install asdf cli
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              sudo apt-get update
              sudo apt-get install -y curl git zsh build-essential
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              brew install curl git zsh python3 ansible
          fi

      - name: Install the workstation collection
        run: |
          ansible-galaxy collection install git+https://github.com/cowdogmoo/workstation.git,main

      - name: Install the dotfiles
        run: |
          chmod +x install_dot_files.sh
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            export PATH=$PATH:/Users/runner/hostedtoolcache/Python/3.12.4/arm64/bin
          fi
          if ./install_dot_files.sh; then
            echo "Dotfiles installed successfully"
          else
            echo "Dotfiles installation failed"
            exit 1
          fi

      - name: Confirm dotfiles are installed and working
        run: |
          source ~/.zshrc
          cat ~/.zshrc
          source ~/.dotfiles/python
          ls -lart ~/.dotfiles
          which ipaddr
          which go
          which run_playbook
        shell: zsh {0}
