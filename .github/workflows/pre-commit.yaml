---
name: Pre-Commit
on:
  pull_request:
  push:
    branches: [main]
  # Run once a week (see https://crontab.guru)
  schedule:
    - cron: "0 0 * * 0"

jobs:
  pre-commit:
    name: Update pre-commit hooks and run pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Set up git repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install go module dependencies
        run: |
          go install mvdan.cc/sh/v3/cmd/shfmt@latest
          go install github.com/magefile/mage@latest

      - name: Install pre-commit
        run: pip3 install pre-commit

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1

      - name: Install dependencies
        run: |
          if [[ "${RUNNER_OS}" == "Linux" ]]; then
              sudo apt-get update
              sudo apt-get install -y curl git zsh
              # Fix permissions to avoid annoying message
              sudo chmod -R 755 /usr/share/zsh
              sudo chmod -R 755 /usr/share/zsh/vendor-completions
              # Resource: https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
          fi

          # Get ohmyzsh
          bash -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        shell: /bin/bash -e {0}

      - name: Install the dotfiles
        run: |
          bash install_dot_files.sh
          source ~/.zshrc
        shell: zsh -e {0}

      - name: Run pre-commit autoupdate action
        uses: browniebroke/pre-commit-autoupdate-action@main

      - name: Create Pull Request with updates
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.BOT_TOKEN }}
          base: main
          branch: update/pre-commit-hooks
          title: Update pre-commit hooks
          commit-message: "chore: update pre-commit hooks"
          body: Update versions of pre-commit hooks to latest version.
