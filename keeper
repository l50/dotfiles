# Check if the $HOME/.keeper directory exists, and create it if it doesn't
if [ ! -d "${HOME}/.keeper" ]; then
    mkdir -p "${HOME}/.keeper"
fi

# Set keeper config location on disk
alias keeper="keeper --config ${HOME}/.keeper/config.json"

# Configure persistent login for easier automation
configure_persistent_login() {
  expect "${HOME}/.dotfiles/files/keeper_persistent_login.expect"
}

# get_keeper_credentials() function retrieves the username and password from a specific Keeper record.
#
# Usage:
#   get_keeper_credentials [record_UID]
#
# Output:
#   Sets the USERNAME and PASSWORD shell variables to the username and password values from the Keeper record with the specified UID.
#
# Example(s):
#   get_keeper_credentials hfLu-IbhTTVhE3DjWsS-Eg # Retrieves credentials from test record
#   echo $USERNAME
#   echo $PASSWORD
get_keeper_credentials () {
    local record=$(get_keeper_record "$1")
    KEEPER_USERNAME=$(echo "$record" | jq -r .Username)
    KEEPER_PASSWORD=$(echo "$record" | jq -r .Password)
}

# get_keeper_record() function retrieves a specific Keeper record using the provided UID.
#
# Usage:
#   get_keeper_record [record_UID]
#
# Output:
#   A JSON object representing the Keeper record with the specified UID, including
#   UID, title, URL, username, password, TOTP, and note fields.
#
# Example(s):
#   get_keeper_record hfLu-IbhTTVhE3DjWsS-Eg # test record
#   get_keeper_record d2MxKXQpWWhjEPCDz6JKOQ # test note
get_keeper_record() {
  if [[ $# -eq 0 ]]; then
    echo "You need to provide a keeper record UID"
    return
  else
    uid="$1"
  fi

  tag=v1.2.3

  goeval -i goutils=github.com/l50/goutils@$tag \
    'record, err := goutils.RetrieveKeeperRecord("'"$uid"'"); if err != nil { fmt.Println(err) } else { jsonData, _ := json.MarshalIndent(record, "", "  "); fmt.Println(string(jsonData)) }'
}

# search_keeper_records() function searches for Keeper records that match the provided search term.
#
# Usage:
#   search_keeper_records [search term]
#
# Output:
#   A record UID that corresponds to the Keeper record that matches the search term.
#
# Example(s):
#   search_keeper_records "Container"
#   search_keeper_records "TEST.*RD"
search_keeper_records() {
  if [[ $# -eq 0 ]]; then
    echo "You need to provide a search term corresponding to a Keeper record"
    return
  else
    search_term="$1"
  fi

  tag=v1.2.3

  goeval -i goutils=github.com/l50/goutils@$tag \
    'record, err := goutils.SearchKeeperRecords("'"$search_term"'"); if err != nil { fmt.Println(err) } else { jsonData, _ := json.MarshalIndent(record, "", "  "); fmt.Println(string(jsonData)) }'
}
